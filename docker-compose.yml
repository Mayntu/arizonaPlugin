services:
  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    env_file:
      - ./fastapi/.env
    depends_on:
      - mongo
      - redis
    container_name: fastapi_app
  
  telebot:
    build:
      context: ./telebot
      dockerfile: Dockerfile
    env_file:
      - ./telebot/.env
    depends_on:
      - mongo
    container_name: telebot_app

  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: always
    volumes:
      - redis_data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    deploy:
      resources:
        limits:
          memory: 150M

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
    deploy:
      resources:
        limits:
          memory: 200M


  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx_proxy
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx:/etc/nginx/conf.d
  #     - ./ssl:/etc/ssl/certs
  #     - ./ssl:/etc/ssl/private
  #   depends_on:
  #     - app

volumes:
  mongodb_data:
  redis_data:
  grafana_data:
