services:
  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    env_file:
      - ./fastapi/.env
    depends_on:
      - mongo
      - redis
    networks:
      - internal_network
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/check"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  telebot:
    build:
      context: ./telebot
      dockerfile: Dockerfile
    env_file:
      - ./telebot/.env
    depends_on:
      - mongo
    container_name: telebot_app
    networks:
      - internal_network

  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - internal_network

  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - internal_network
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "127.0.0.1:9090:9090"
    deploy:
      resources:
        limits:
          memory: 150M
    networks:
      - internal_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - internal_network
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - internal_network
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /var/lib/docker:/var/lib/docker
      - /sys/fs/cgroup:/sys/fs/cgroup
    deploy:
      resources:
        limits:
          memory: 200M
    networks:
      - internal_network


  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fastapi
      - telebot
    networks:
      - internal_network
      - external_network

networks:
  internal_network:
    driver: bridge
  external_network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  grafana_data:
